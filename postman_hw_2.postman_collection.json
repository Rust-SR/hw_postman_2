{
	"info": {
		"_postman_id": "41b71d32-2622-4e6f-8746-b16d33a4c8e4",
		"name": "postman_hw_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"/*\r",
							"http://162.55.220.72:5005/user_info_3\r",
							"1. Отправить запрос.\r",
							"2. Статус код 200\r",
							"3. Спарсить response body в json.\r",
							"4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"7. Спарсить request.\r",
							"8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"11. Вывести в консоль параметр family из response.\r",
							"12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"*/\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Name = Rustem\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Rustem\");\r",
							"})\r",
							"\r",
							"pm.test(\"Age = 30\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(\"30\");\r",
							"})\r",
							"\r",
							"pm.test(\"Salary = 1000\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(1000);\r",
							"})\r",
							"\r",
							"var reqData = request.data\r",
							"\r",
							"pm.test(\"Name from request  = Rustem\", function () {\r",
							"    pm.expect(reqData.name).to.eql(reqData.name);\r",
							"})\r",
							"\r",
							"pm.test(\"Age from request  = 30\", function () {\r",
							"    pm.expect(reqData.age).to.eql(reqData.age);\r",
							"})\r",
							"\r",
							"pm.test(\"Salary from request  = 1000\", function () {\r",
							"    pm.expect(reqData.salary).to.eql(reqData.salary);\r",
							"})\r",
							"\r",
							"console.log(jsonData.family);\r",
							"//Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"Salary from request * 4 = 4000\", function () {\r",
							"    pm.expect(reqData.salary*4).to.eql(reqData.salary*4);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Rustem",
							"type": "text"
						},
						{
							"key": "age",
							"value": "30",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"//4. Спарсить request.\r",
							"var reqData = pm.request.url.query.toObject();\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Name from request = Rustem\", function()  {\r",
							"    pm.expect(reqData.name).to.eql(jsonData.name);\r",
							"})\r",
							"\r",
							"//6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Age from request = 30\", function() {\r",
							"    pm.expect(reqData.age).to.eql(jsonData.age);\r",
							"})\r",
							"\r",
							"//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Salary fron request = 1000\", function() {\r",
							"    pm.expect(+reqData.salary).to.eql(jsonData.salary);\r",
							"})\r",
							"\r",
							"//8. Вывести в консоль параметр family из response.\r",
							"console.log(pm.response.json().family);\r",
							"\r",
							"//9. Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"Dog have a name?\", function() {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property('name');\r",
							"})\r",
							"\r",
							"//10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"Dog have a age?\", function() {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property('age');\r",
							"})\r",
							"\r",
							"//11. Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"Dog name is Luky?\", function() {\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql('Luky');\r",
							"})\r",
							"\r",
							"//12. Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"Dog age = 4?\", function() {\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(4);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_3?name=Rustem&age=30&salary=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Rustem"
						},
						{
							"key": "age",
							"value": "30"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		}
	]
}